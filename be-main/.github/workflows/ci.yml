name: CI/CD Pipeline

on:
  push:
    paths-ignore:
      - 'k8s/**'  # 빌드 결과물이 저장되는 경로 트리거에서 제외
    branches:
      - main # main 브랜치에 푸시할 때마다 트리거
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8" # 사용할 Python 버전

      - name: Install dependencies
        run: |
          cd app  # 특정 디렉토리로 변경
          pip install -r requirements.txt  # requirements.txt에 정의된 패키지 설치

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      
      - name: Build Docker image
        run: |
          echo "${{ secrets.DOCKER_PW }}" | docker login --username ${{ secrets.DOCKER_ID }} --password-stdin

          docker build -t ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$GITHUB_RUN_NUMBER ./app/.
  
      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$GITHUB_RUN_NUMBER

      - name: Update deployment.yaml with new image
        run: |
          sed -i "s|image: .*|image: ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$GITHUB_RUN_NUMBER|" k8s/deployment.yaml
          cat k8s/deployment.yaml

      - name: Commit and push updated deployment.yaml
        run: |
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_NAME }}

          git config user.name
          git config user.email

          git add k8s/deployment.yaml
          git commit -m "Update image tag in deployment.yaml"
          git push origin main  # main 브랜치에 푸시합니다.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
